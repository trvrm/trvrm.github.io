<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>trvrm.github.io - Trevor</title><link>/</link><description>Ubi Caritas et Amor, Deus Ibi Est</description><lastBuildDate>Thu, 06 Jul 2017 00:00:00 -0500</lastBuildDate><item><title>Using SQLAlchemy and Postgres functions to produce JSON tree structures from SQL joins</title><link>/using-sqlalchemy-and-postgres-functions-to-produce-json-tree-structures-from-sql-joins.html</link><description>&lt;p&gt;More and more I'm discovering that Postgres is an amazingly powerful 'NoSQL' database, as well as the best relational database available today.&lt;/p&gt;
&lt;p&gt;Since the introduction of the JSON and JSONB data types, I've been able to store both deeply nested, unstructured data AND highly relational data in the same data …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 06 Jul 2017 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2017-07-06:/using-sqlalchemy-and-postgres-functions-to-produce-json-tree-structures-from-sql-joins.html</guid><category>Python</category><category>SqlAlchemy</category><category>Postgres</category></item><item><title>Image recognition with Keras, Tensorflow, and InceptionV3</title><link>/image-recognition-with-keras-tensorflow-and-inceptionv3.html</link><description>&lt;p&gt;Neural networks are a powerful tool for teaching computers to recognize complex patterns, and now tools like &lt;a href="https://keras.io/"&gt;Keras&lt;/a&gt; and &lt;a href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt; are beginning to make them a practical tool for programmers who don't have a PhD in machine learning.&lt;/p&gt;
&lt;p&gt;One very powerful aspect of these tools is the ability to share …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Fri, 17 Mar 2017 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2017-03-17:/image-recognition-with-keras-tensorflow-and-inceptionv3.html</guid><category>Python</category><category>TensorFlow</category><category>Machine Learning</category><category>Keras</category></item><item><title>Basic Keras Example</title><link>/basic-keras-example.html</link><description>&lt;p&gt;&lt;a href="https://keras.io/"&gt;Keras&lt;/a&gt; is a high-level neural network Python library, designed to sit on top of lower level implementations such as &lt;a href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It provides abstractions that enable you to quickly create neural network structures.  Here I'm going to try to create a simple 3 layer network, and use it to solve a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Sun, 26 Feb 2017 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2017-02-26:/basic-keras-example.html</guid><category>Python</category><category>TensorFlow</category><category>Machine Learning</category><category>Keras</category></item><item><title>Using TensorFlow to compute gradients</title><link>/using-tensorflow-to-compute-gradients.html</link><description>&lt;p&gt;I tried the basic linear regression example from &lt;a href="https://medium.com/all-of-us-are-belong-to-machines/the-gentlest-introduction-to-tensorflow-248dc871a224#.8429xmd7s"&gt;this article&lt;/a&gt;.  I was quite surprised by this line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;train_step&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GradientDescentOptimizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0000001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;because it didn't seem to require me to tell the &lt;code&gt;GradientDescentOptimizer&lt;/code&gt; what the first derivative of my cost function is.  Previously when I've used gradient …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 09 Feb 2017 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2017-02-09:/using-tensorflow-to-compute-gradients.html</guid><category>Python</category><category>TensorFlow</category><category>Machine Learning</category></item><item><title>Fractal Dimension</title><link>/fractal-dimension.html</link><description>&lt;p&gt;Inspired by the &lt;a href="https://www.youtube.com/watch?v=bSfe5M_zG2s"&gt;keynote&lt;/a&gt; given at PyCon Portland by K Lars Lohn,, I wanted to try my hand 
at computing the fractal dimension of a few different images.&lt;/p&gt;
&lt;p&gt;This is a very simple implementation of a &lt;a href="https://en.wikipedia.org/wiki/Minkowski%E2%80%93Bouligand_dimension"&gt;box counting&lt;/a&gt; algorithm.&lt;/p&gt;
&lt;p&gt;A couple of ideas are borrowed from https://github.com/twobraids …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Tue, 24 Jan 2017 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2017-01-24:/fractal-dimension.html</guid><category>Python</category></item><item><title>New Blog Theme</title><link>/new-blog-theme.html</link><description>&lt;p&gt;Yesterday I discovered the &lt;a href="http://bulma.io/"&gt;Bulma&lt;/a&gt; CSS library.  It seems to be basically 'bootstrap for the flexbox world.'&lt;/p&gt;
&lt;p&gt;Given that Bootstrap version 4 has been promising us Flexbox support for nearly a year now, I think Bulma could be my
new best CSS friend.  Of course, I won't be able to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Fri, 13 May 2016 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2016-05-13:/new-blog-theme.html</guid><category>Python</category><category>Pelican</category><category>Bulma</category></item><item><title>Streaming PHP Output with FPM and NGINX</title><link>/streaming-php-output-with-fpm-and-nginx.html</link><description>&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; We had a PHP report that takes around 45 seconds to render.  To give the user feedback
that their report was actually being generated, I wanted to change our PHP installation to deliver at least some output to the client as soon as possible, rather than waiting until the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Sun, 25 Oct 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-10-25:/streaming-php-output-with-fpm-and-nginx.html</guid><category>PHP</category><category>FPM</category><category>NGINX</category></item><item><title>Efficient Postgres Bulk Inserts using Psycopg2 and Unnest</title><link>/bulk-psycopg2-inserts.html</link><description>&lt;p&gt;One of the biggest challenges I face maintaining large Postgres systems
is getting data &lt;em&gt;into&lt;/em&gt; them in an efficient manner. Postgres is very,
very good at maintaining, organising, querying and retrieving data, but
inserts themselves can be quite slow.&lt;/p&gt;
&lt;p&gt;Various stackoverflow questions suggest using things like &lt;code class="code"&gt;
COPY&lt;/code&gt;
, but
that assumes …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 22 Oct 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-10-22:/bulk-psycopg2-inserts.html</guid><category>Python</category><category>Postgres</category></item><item><title>Pelican, Atom and Markdown</title><link>/pelican-atom-and-markdown.html</link><description>&lt;p&gt;I've been using reStructured text in general to write this blog, but I think I'm
going to be switching to Markdown.  As an experiment, I'm writing this post in Markdown.&lt;/p&gt;
&lt;p&gt;I'm also writing it in the &lt;a href="https://atom.io/"&gt;Atom text editor&lt;/a&gt;, which has really come on a
long way since I last …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Fri, 26 Jun 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-06-26:/pelican-atom-and-markdown.html</guid><category>pelican</category><category>markdown</category></item><item><title>Asynchronous Python</title><link>/asynchronous-python.html</link><description>&lt;p&gt;It's possible to get python to do node-like non-blocking requests, this could
take away one of the key reasons for using node.&lt;/p&gt;
&lt;p&gt;The following is a full bottle-based python web application.&lt;/p&gt;
&lt;p&gt;A client can sucessfully call /test while another client is waiting for
/slowproxy to return a result from a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/asynchronous-python.html</guid><category>Python</category><category>gevent</category></item><item><title>CoffeeScript</title><link>/coffeescript.html</link><description>&lt;p&gt;Through a bizarre twist of history, the entire client-side web runs on a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Brendan_Eich#Netscape_and_JavaScript"&gt;language&lt;/a&gt;
that was thrown together in 10 days.&lt;/p&gt;
&lt;p&gt;Despite huge investments in their own proprietary technology by the likes of Sun
Microsystems, Adobe and Microsoft, this weird little spinoff of &lt;strong&gt;self&lt;/strong&gt; and &lt;strong&gt;scheme&lt;/strong&gt;
is everywhere, while client-side …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/coffeescript.html</guid><category>coffeescript</category><category>javascript</category></item><item><title>Configuring Systems with Fabric and Cuisine</title><link>/configuring-systems-with-fabric-and-cuisine.html</link><description>&lt;p&gt;I've mentioned &lt;a class="reference external" href="http://fabric.readthedocs.org/en/1.8/"&gt;Fabric&lt;/a&gt; before on this blog.  Because so much of my development time is spent in Python, it makes
sense for me to look for system administration tools that are also written in Python.  Fabric fits the bill
perfectly, and allows me to run tasks remotely on multiple machines …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/configuring-systems-with-fabric-and-cuisine.html</guid><category>linux</category><category>python</category><category>fabric</category></item><item><title>IPython with Python 3</title><link>/ipython-with-python-3.html</link><description>&lt;p&gt;This took me longer than I was expecting.&lt;/p&gt;
&lt;p&gt;In general when working with IPython I use &lt;code class="code"&gt;
pip&lt;/code&gt;
 rather than &lt;code class="code"&gt;
apt-get&lt;/code&gt;
, as
pip tends to have more up-to-date packages.&lt;/p&gt;
&lt;p&gt;In the end I found the simplest thing to do was to set up IPython in an isolated
virtualenv environment.  The main …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/ipython-with-python-3.html</guid><category>Python</category><category>IPython</category></item><item><title>logrotate</title><link>/logrotate.html</link><description>&lt;p&gt;I have a large, complex &lt;a class="reference external" href="/postfix.html"&gt;mailing system&lt;/a&gt; that processes
a significant amount of data every hour.  While I'm developing it, I want to know
what it's doing, and whether it's having any problems.  So I use the excellent
python &lt;a class="reference external" href="https://docs.python.org/2/library/logging.html"&gt;logging&lt;/a&gt; library to produce comprehensive monitoring data.&lt;/p&gt;
&lt;p&gt;The only problem is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/logrotate.html</guid><category>logrotate</category><category>linux</category></item><item><title>More Ractive</title><link>/more-ractive.html</link><description>&lt;p&gt;I've used &lt;a class="reference external" href="http://www.ractivejs.org/"&gt;Ractive&lt;/a&gt; for several projects recently.
It's been like a breath of fresh air.  I've been writing user interfaces of one
kind or another for more than a decade, and keeping &lt;em&gt;what's displayed to the user&lt;/em&gt;
in sync with &lt;em&gt;what's stored in the data structures&lt;/em&gt; has often been a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/more-ractive.html</guid><category>javascript</category><category>ractive</category></item><item><title>Nginx and UWSGI on Ubuntu 14</title><link>/nginx-uwsgi-ubuntu-14.html</link><description>&lt;p&gt;The documentation for Nginx and UWSGI is long and complex, but with ubuntu 14
it's actually pretty straightforward to get them up and running.&lt;/p&gt;
&lt;p&gt;I present here a a setup that uses nginx and uwsgi emperor to host
multiple python web applications simultaneously on an ubuntu 14 machine.&lt;/p&gt;
&lt;p&gt;First, the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/nginx-uwsgi-ubuntu-14.html</guid><category>Python</category><category>nginx</category><category>uwsgi</category></item><item><title>PDF Generation With Pelican</title><link>/pdf-generation-with-pelican.html</link><description>&lt;p&gt;The existing documentation is a little unclear on this, because it says
you need to add &lt;code class="code"&gt;
PDF_GENERATOR=True&lt;/code&gt;
 to your &lt;cite&gt;pelicanconf.py&lt;/cite&gt; file.&lt;/p&gt;
&lt;p&gt;This advice is out of date: PDF generation has been moved to a plugin.&lt;/p&gt;
&lt;p&gt;So you need to first make sure you have &lt;code class="code"&gt;
rst2pdf&lt;/code&gt;
 installed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/pdf-generation-with-pelican.html</guid><category>python</category><category>pelican</category></item><item><title>Postfix</title><link>/postfix.html</link><description>&lt;p&gt;Postfix is a ghastly horror that really should be quietly eliminated.  But that truism hides a deeper issue - email itself is a ghastly horror, the result of 30 years of hacks, edge-cases, non-conformant implementations and competing design constraints, that only persists because we still haven't come up with anything better …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/postfix.html</guid><category>postfix</category><category>email</category></item><item><title>Postgres JSON Aggregation</title><link>/postgres-json-aggregation.html</link><description>&lt;p&gt;I've been using the new JSON functionality in Postgres a lot recently:
I'm fond of saying that Postgresql is the best NoSQL database available
today. I'm quite serious about this: having used key-value and JSON
stores such as CouchDB in the past, it's amazing to me how the Postgres
developers …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/postgres-json-aggregation.html</guid><category>Python</category><category>Postgres</category></item><item><title>Postgres Timestamps</title><link>/postgres-timestamps.html</link><description>&lt;p&gt;At my company, I maintain a large distributed. data collection platform
. Pretty much every record we collect needs to be stamped with a
&lt;code class="code"&gt;
created&lt;/code&gt;
 field. But because the incoming data comes from sources on
various devices in multiple countries and timezones, making sure that
the timestamps are precise and meaningful …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/postgres-timestamps.html</guid><category>Python</category><category>Postgres</category></item><item><title>Python Comprehensions</title><link>/python-comprehensions.html</link><description>&lt;p&gt;Python &lt;strong&gt;list comprehensions&lt;/strong&gt; are one of the most powerful and useful
features of the language. However, I've noticed even quite experienced
Python programmers using less powerful idioms when a list comprehension
would be the perfect solution to their problem, and even though I've
been a Python developer for more than …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/python-comprehensions.html</guid><category>Python</category></item><item><title>Remote Systems Administration with Fabric</title><link>/remote-systems-administration-with-fabric.html</link><description>&lt;p&gt;A tool I'm finding myself using more and more these days is &lt;a class="reference external" href="http://fabric.readthedocs.org/en/1.8/"&gt;Fabric&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fabric is a python utility and library for streamlining systems administration
tasks on multiple machines.&lt;/p&gt;
&lt;p&gt;Although I'm primarily a developer and systems architect, I find that as our
company grows I keep getting drawn into sysadmin and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/remote-systems-administration-with-fabric.html</guid><category>linux</category><category>python</category></item><item><title>Reportlab Images in IPython</title><link>/reportlab-images-in-ipython.html</link><description>&lt;p&gt;With a bit of work we can get IPython to render ReportLab objects
directly to the page as Matplotlib plots.&lt;/p&gt;
&lt;p&gt;Huge thanks to github user &lt;a class="reference external" href="https://github.com/deeplook"&gt;deeplook&lt;/a&gt;,
this is basically a modification of
&lt;a class="reference external" href="http://nbviewer.ipython.org/gist/deeplook/5162445"&gt;this&lt;/a&gt; IPython
notebook.&lt;/p&gt;
&lt;p&gt;First our imports.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.lib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.graphics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;renderPM&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/reportlab-images-in-ipython.html</guid><category>Python</category><category>IPython</category></item><item><title>A Seriously Subtle Bug</title><link>/seriously-subtle-bug.html</link><description>&lt;p&gt;I build and maintain a number of web applications built using &lt;a class="reference external" href="http://python.org"&gt;Python&lt;/a&gt;, &lt;a class="reference external" href="http://bottlepy.org/docs/dev/index.html"&gt;Bottle&lt;/a&gt;, and &lt;a class="reference external" href="http://uwsgi-docs.readthedocs.org/en/latest/index.html"&gt;uWSGI&lt;/a&gt;.
In general, I've found this a very powerful and robust software stack.  However, this week
we encountered a very strange issue that took us many hours to fully diagnose.&lt;/p&gt;
&lt;p&gt;Our first indication that something was …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/seriously-subtle-bug.html</guid><category>linux</category><category>python</category><category>uwsgi</category><category>bottle</category></item><item><title>SQL Magic</title><link>/sql-magic.html</link><description>&lt;p&gt;I'm finding the &lt;code class="code"&gt;
%sql&lt;/code&gt;
 magic function extremely useful. It turns
IPython into a very nice front-end to Postgresql.&lt;/p&gt;
&lt;p&gt;First, make sure you have the &lt;code class="code"&gt;
ipython-sql&lt;/code&gt;
 extension installed:&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;
pip install ipython-sql&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.python.org/pypi/ipython-sql"&gt;https://pypi.python.org/pypi/ipython-sql&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then we load the extension&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;load_ext&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we set up our database connection …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Thu, 01 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2015-01-01:/sql-magic.html</guid><category>Python</category><category>IPython</category></item><item><title>Test</title><link>/test.html</link><description>
    &lt;h1&gt;This is just a test&lt;/h1&gt;
    But it seems to work OK
    
    Can I tweak routes?
 
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Sat, 27 Sep 2014 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2014-09-27:/test.html</guid></item><item><title>Basic IPython Plotting</title><link>/basic-ipython-plotting.html</link><description>&lt;p&gt;&lt;strong&gt;Things have changed a bit since IPython 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now apparently we want to manually specify the use of inline matplotlib
rather than enable globally in the server.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/Part%203%20-%20Plotting%20with%20Matplotlib.ipynb"&gt;http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/Part%203%20-%20Plotting%20with%20Matplotlib.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Tue, 20 May 2014 16:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2014-05-20:/basic-ipython-plotting.html</guid><category>Python</category><category>IPython</category></item><item><title>Ractive.js</title><link>/ractive-js.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.ractivejs.org/"&gt;Ractive.js&lt;/a&gt; caught my eye this week.  I've been using &lt;a class="reference external" href="http://backbonejs.org/"&gt;Backbone&lt;/a&gt; for the last couple
of years to develop single page client-side applications, and I've liked how
it doesn't get in your way, but simply allows you to get on with your work.&lt;/p&gt;
&lt;p&gt;When I noticed that three of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Trevor</dc:creator><pubDate>Wed, 01 Jan 2014 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2014-01-01:/ractive-js.html</guid><category>javascript</category><category>ractive</category></item></channel></rss>